{"version":3,"sources":["api/User.js","components/Nav.js","tasks/NewTaskForm.js","tasks/Task.js","tasks/TaskList.js","api/Tasks.js","tasks/Page.js","auth/Page.js","App.js","index.js"],"names":["User","register","username","password","requestOptions","method","headers","Content-Type","body","JSON","stringify","Promise","resolve","reject","fetch","BL_URL","then","res","ok","console","log","catch","err","login","logout","getUsername","json","Nav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","logoutHandler","setState","authText","authChangeHandler","isAuthorized","_this2","updateUserText","prevProps","authButtons","react_default","a","createElement","onClick","className","id","react_router_dom","to","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Component","NewTaskForm","buttonClickHandler","addTaskHandler","text","inputChangeHandler","event","target","value","onChange","placeholder","Task","textClickHandler","editing","saveClickHandler","editTaskHandler","info","_id","description","cardContent","saveButton","style","width","e","deleteTaskHandler","TaskList","tasks","map","task","tasks_Task","key","Tasks","delete","requestUrl","deleteAll","edit","credentials","getAll","options","cache-control","add","TasksPage","deleteAllTasksHandler","reloadTasks","tasks_NewTaskForm","tasks_TaskList","AuthPage","authButtonClickHandler","authLogin","authPassword","loginSuccessMessage","loginErrorMessage","regButtonClickHandler","regLogin","regPassword","regSuccessMessage","regErrorMessage","authLoginChangeHandler","authPasswordChangeHandler","regLoginChangeHandler","regPasswordChangeHandler","loginSuccess","loginError","regSuccess","regError","role","App","getIsAuthorized","Cookies","get","components_Nav","react_router","exact","path","render","Page","assign","auth_Page","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d2c1e62d.chunk.js","sourcesContent":["const BL_URL = '/api/';\r\n\r\nexport default {\r\n    register: (username, password) => {\r\n        const requestUrl = BL_URL + 'register';\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'username': username,\r\n                'password': password\r\n            })\r\n        };\r\n\r\n        return new Promise((resolve, reject) => {\r\n            fetch(requestUrl, requestOptions)\r\n                .then((res) => {\r\n                    if (res.ok) {\r\n                        console.log('Registered successfully');\r\n                        resolve();\r\n                    } else {\r\n                        reject();\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        });\r\n    },\r\n\r\n    login: (username, password) => {\r\n        const requestUrl = BL_URL + 'login';\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'username': username,\r\n                'password': password\r\n            })\r\n        };\r\n\r\n        return new Promise((resolve, reject) => {\r\n            fetch(requestUrl, requestOptions)\r\n                .then((res) => {\r\n                    if (res.ok) {\r\n                        console.log('Logged in successfully');\r\n                        console.log(res);;\r\n                        resolve();\r\n                    } else {\r\n                        reject();\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        });\r\n    },\r\n\r\n    logout: () => {\r\n        const requestUrl = BL_URL + 'logout';\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        return new Promise((resolve, reject) => {\r\n            fetch(requestUrl, requestOptions)\r\n                .then(res => {\r\n                    if (res.ok) {\r\n                        console.log('Logged out successfully');\r\n                        resolve();\r\n                    } else {\r\n                        reject();\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        });\r\n    },\r\n\r\n    getUsername: () => {\r\n        const requestUrl = BL_URL + 'username';\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        return new Promise((resolve, reject) => {\r\n            fetch(requestUrl, requestOptions)\r\n                .then(res => {\r\n                    if (res.ok) {\r\n                        return res.json();\r\n                    } else {\r\n                        reject();\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    resolve(res.username);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        });\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport User from '../api/User';\r\n\r\nclass Nav extends Component {\r\n    state = {};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state.authText = props.isAuthorized ? '' : 'Not authorized';\r\n    }\r\n\r\n    updateUserText() {\r\n        User.getUsername()\r\n            .then(username => {\r\n                const authText = 'Authorized as: ' + username;\r\n                this.setState({authText});\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    logoutHandler = () => {\r\n        User.logout()\r\n            .then(res => {\r\n                const authText = 'Not authorized';\r\n                this.setState({authText});\r\n                this.props.authChangeHandler();\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.isAuthorized) {\r\n            this.updateUserText();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.isAuthorized && !prevProps.isAuthorized) {\r\n            this.updateUserText();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let authButtons;\r\n\r\n        if (this.props.isAuthorized) {\r\n            authButtons = (<button onClick={this.logoutHandler} className=\"btn btn-outline-danger my-2 my-sm-0\" id=\"delete-all-button\">Log Out</button>)\r\n\r\n        } else {\r\n            authButtons = (<Link to=\"/auth/\"><button className=\"btn btn-outline-success my-2 my-sm-0\" id=\"delete-all-button\">Log In</button></Link>)\r\n        }\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                <a className=\"navbar-brand\" href=\"#\">Tasks App</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/tasks/\">Tasks</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <span className=\"nav-link\">{this.state.authText}</span>\r\n                        </li>\r\n                    </ul>\r\n                    {authButtons}\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\n\r\nclass NewTaskForm extends Component {\r\n    state = {};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state.text = '';\r\n    }\r\n\r\n    buttonClickHandler = () => {\r\n        this.props.addTaskHandler(this.state.text);\r\n        this.setState({text: ''});\r\n    }\r\n\r\n    inputChangeHandler = (event) => {\r\n        this.setState({text: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col col-8 col-md-6 col-lg-4\">\r\n                        <input onChange={this.inputChangeHandler} value={this.state.text} className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Задача\"/>\r\n                    </div>\r\n                    <div className=\"col col-4 col-md-6 col-lg-4\">\r\n                        <button onClick={this.buttonClickHandler} className=\"btn btn-outline-success\">Добавить</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTaskForm;","import React, { Component } from 'react';\r\n\r\nclass Task extends Component {\r\n  state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state.text = props.info.description;\r\n    this.state.editing = false;\r\n  }\r\n\r\n  textClickHandler = () => {\r\n    console.log('text click');\r\n    this.setState({\r\n      editing: true\r\n    });\r\n  }\r\n\r\n  saveClickHandler = () => {\r\n    console.log('save');\r\n    this.setState({\r\n      editing: false\r\n    });\r\n    this.props.editTaskHandler(this.props.info._id, this.state.text);\r\n  }\r\n\r\n  inputChangeHandler = (event) => {\r\n    this.setState({ text: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    let cardContent;\r\n\r\n    if (this.state.editing) {\r\n      cardContent = (\r\n        <p className=\"card-text\">\r\n          <input onChange={this.inputChangeHandler} value={this.state.text} className=\"form-control mr-sm-2\" type=\"text\" />\r\n        </p>\r\n      );\r\n    } else {\r\n      cardContent = (\r\n        <p className=\"card-text\" onClick={this.textClickHandler}>\r\n          {this.state.text}\r\n        </p>\r\n      );\r\n    }\r\n\r\n    let saveButton;\r\n\r\n    if (this.state.editing) {\r\n      saveButton = (<a href=\"#\" onClick={this.saveClickHandler} className=\"btn btn-outline-success task-save-button\">Сохранить</a>);\r\n    }\r\n\r\n    return (\r\n      <div className=\"col col-12 col-md-6 col-lg-4\">\r\n        <div className=\"card\" style={{ width: '18rem' }}>\r\n          <div className=\"card-body\">\r\n            {cardContent}\r\n            <a href=\"#\" onClick={(e) => { this.props.deleteTaskHandler(this.props.info._id) }} className=\"btn btn-danger\">Удалить</a>\r\n            {saveButton}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;","import React, { Component } from 'react';\r\nimport Task from './Task';\r\n\r\n\r\nclass TaskList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\" id=\"task-list\">\r\n                    {this.props.tasks.map((task) => {\r\n                        return (<Task key={task._id} info={task} deleteTaskHandler={this.props.deleteTaskHandler} editTaskHandler={this.props.editTaskHandler}/>)\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskList;","const BL_URL = '/api/';\n\nexport default {\n\n   delete: function (id) {\n      const requestUrl = BL_URL + 'tasks/' + id;\n\n      const requestOptions = {\n         method: 'DELETE',\n         headers: {\n            'Content-Type': 'application/json'\n         }\n      };\n\n      return new Promise((resolve, reject) => {\n         fetch(requestUrl, requestOptions)\n            .then(res => {\n               if (res.ok) {\n                  console.log('Task deleted successfully');\n                  resolve();\n               } else {\n                  console.log('Couldn\\'t delete task');\n                  reject();\n               }\n            })\n            .catch(err => {\n               console.log(err);\n            });\n      });\n   },\n\n   deleteAll: function () {\n      const requestUrl = BL_URL + 'tasks';\n\n      const requestOptions = {\n         method: 'DELETE',\n         headers: {\n            'Content-Type': 'application/json'\n         }\n      };\n\n      return new Promise((resolve, reject) => {\n         fetch(requestUrl, requestOptions)\n            .then(res => {\n               if (res.ok) {\n                  console.log('Tasks deleted successfully');\n                  resolve();\n               } else {\n                  console.log('Couldn\\'t delete tasks');\n                  reject();\n               }\n            })\n            .catch(err => {\n               console.log(err);\n            });\n      });\n   },\n\n   edit: function (id, text) {\n      const requestUrl = BL_URL + 'tasks/' + id;\n\n      const requestOptions = {\n         method: 'POST',\n         credentials: 'include',\n         headers: {\n            'Content-Type': 'application/json'\n         },\n         body: JSON.stringify({\n            'description': text\n         })\n      };\n\n      return new Promise((resolve, reject) => {\n         fetch(requestUrl, requestOptions)\n            .then(res => {\n               if (res.ok) {\n                  console.log('Task updated successfully');\n                  resolve();\n               } else {\n                  console.log('Couldn\\'t update task');\n                  reject();\n               }\n            })\n            .catch(err => {\n               console.log(err);\n            });\n      });\n   },\n\n   getAll: function () {\n      let options = {\n         method: 'GET',\n         credentials: 'include',\n         headers: {\n            'cache-control': 'no-cache'\n         }\n      };\n\n      return new Promise((resolve, reject) => {\n         fetch(BL_URL + 'tasks', options)\n            .then(res => res.json())\n            .then(tasks => {\n               resolve(tasks);\n            })\n            .catch(err => {\n               console.log('Couldn\\'t load tasks');\n               console.log(err);\n               reject();\n            })\n      });\n   },\n\n   add: function (text) {\n      let options = {\n         method: 'POST',\n         credentials: 'include',\n         headers: {\n            'Content-Type': 'application/json'\n         },\n         body: JSON.stringify({\n            'description': text\n         })\n      };\n\n      return new Promise((resolve, reject) => {\n         fetch(BL_URL + 'tasks', options)\n            .then(res => res.json())\n            .then(task => {\n               console.log('Task added successfully');\n               console.log(task);\n               resolve();\n            })\n            .catch(err => {\n               console.log(err);\n               reject();\n            })\n      });\n   }\n}","import React, { Component } from 'react';\r\nimport NewTaskForm from './NewTaskForm';\r\nimport TaskList from './TaskList';\r\nimport Tasks from '../api/Tasks';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nclass TasksPage extends Component {\r\n    state = {};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state.tasks = [];\r\n    }\r\n\r\n    deleteAllTasksHandler = () => {\r\n        Tasks.deleteAll().then(() => {\r\n            this.reloadTasks();\r\n        })\r\n    }\r\n\r\n    deleteTaskHandler = (id) => {\r\n        Tasks.delete(id).then(() => {\r\n            this.reloadTasks();\r\n        })\r\n    }\r\n\r\n    addTaskHandler = (text) => {\r\n        Tasks.add(text).then(() => {\r\n            this.reloadTasks();\r\n        })\r\n    }\r\n\r\n    editTaskHandler = (id, text) => {\r\n        Tasks.edit(id, text).then(() => {\r\n            this.reloadTasks();\r\n        })\r\n    }\r\n\r\n    reloadTasks = () => {\r\n        Tasks.getAll().then((tasks) => {\r\n            this.setState({ 'tasks': tasks })\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.isAuthorized) {\r\n            this.reloadTasks();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let pageContent;\r\n\r\n        if (this.props.isAuthorized) {\r\n            pageContent = (\r\n                <div>\r\n                    <NewTaskForm addTaskHandler={this.addTaskHandler} />\r\n                    <TaskList tasks={this.state.tasks} deleteTaskHandler={this.deleteTaskHandler} editTaskHandler={this.editTaskHandler} />\r\n                </div>\r\n            );\r\n        } else {\r\n            pageContent = (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-12\">\r\n                            <h3>You need to <Link to=\"/auth/\">authorize</Link> to access this page.</h3>\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n            )\r\n        }\r\n\r\n        return pageContent;\r\n    }\r\n}\r\n\r\nexport default TasksPage;","import React, { Component } from 'react';\r\nimport User from '../api/User';\r\n\r\nclass AuthPage extends Component {\r\n    state = {};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state.authLogin = '';\r\n        this.state.authPassword = '';\r\n        this.state.regLogin = '';\r\n        this.state.regPassword = '';\r\n    }\r\n\r\n    authButtonClickHandler = () => {\r\n        User.login(this.state.authLogin, this.state.authPassword)\r\n            .then(res => {\r\n                this.setState({\r\n                    loginSuccessMessage: 'Authorization successful.',\r\n                    loginErrorMessage: '',\r\n                    authLogin: '',\r\n                    authPassword: ''\r\n                });\r\n                this.props.authChangeHandler();\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    loginSuccessMessage: '',\r\n                    loginErrorMessage: 'Authorization error. Make sure you entered correct credentials.',\r\n                    authLogin: '',\r\n                    authPassword: ''\r\n                });\r\n            });\r\n    }\r\n\r\n    regButtonClickHandler = () => {\r\n        User.register(this.state.regLogin, this.state.regPassword)\r\n            .then(res => {\r\n                this.setState({\r\n                    regSuccessMessage: 'Registration successful.',\r\n                    regErrorMessage: '',\r\n                    regLogin: '',\r\n                    regPassword: ''\r\n                });\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    regSuccessMessage: '',\r\n                    regErrorMessage: 'Registration failed. Perhaps username is taken already.',\r\n                    regLogin: '',\r\n                    regPassword: ''\r\n                });\r\n            });\r\n    }\r\n\r\n    authLoginChangeHandler = (event) => {\r\n        this.setState({ authLogin: event.target.value });\r\n    }\r\n\r\n    authPasswordChangeHandler = (event) => {\r\n        this.setState({ authPassword: event.target.value });\r\n    }\r\n\r\n    regLoginChangeHandler = (event) => {\r\n        this.setState({ regLogin: event.target.value });\r\n    }\r\n\r\n    regPasswordChangeHandler = (event) => {\r\n        this.setState({ regPassword: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        let loginSuccess;\r\n        let loginError;\r\n        let regSuccess;\r\n        let regError;\r\n\r\n        if (this.state.loginSuccessMessage) {\r\n            loginSuccess = (<div className=\"alert alert-success\" role=\"alert\">{this.state.loginSuccessMessage}</div>)\r\n        }\r\n        if (this.state.loginErrorMessage) {\r\n            loginError = (<div className=\"alert alert-danger\" role=\"alert\">{this.state.loginErrorMessage}</div>)\r\n        }\r\n        if (this.state.regSuccessMessage) {\r\n            regSuccess = (<div className=\"alert alert-success\" role=\"alert\">{this.state.regSuccessMessage}</div>)\r\n        }\r\n        if (this.state.regErrorMessage) {\r\n            regError = (<div className=\"alert alert-danger\" role=\"alert\">{this.state.regErrorMessage}</div>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col col-6\">\r\n                        <div className=\"jumbotron\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col col-12\">\r\n                                        <h2>Authorization</h2><br />\r\n                                        {loginSuccess}\r\n                                        {loginError}\r\n                                        <input onChange={this.authLoginChangeHandler} value={this.state.authLogin} className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Username\" /><br />\r\n                                        <input onChange={this.authPasswordChangeHandler} value={this.state.authPassword} className=\"form-control mr-sm-2\" type=\"password\" placeholder=\"Password\" /><br />\r\n                                        <button onClick={this.authButtonClickHandler} className=\"btn btn-outline-success\">Log In</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col col-6\">\r\n                        <div className=\"jumbotron\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col col-12\">\r\n                                        <h2>Registration</h2><br />\r\n                                        {regSuccess}\r\n                                        {regError}\r\n                                        <input onChange={this.regLoginChangeHandler} value={this.state.regLogin} className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Username\" /><br />\r\n                                        <input onChange={this.regPasswordChangeHandler} value={this.state.regPassword} className=\"form-control mr-sm-2\" type=\"password\" placeholder=\"Password\" /><br />\r\n                                        <button onClick={this.regButtonClickHandler} className=\"btn btn-outline-success\">Register</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthPage;","import React, { Component } from 'react';\nimport './css/App.css';\nimport './css/bootstrap.min.css';\nimport Nav from './components/Nav';\nimport TasksPage from './tasks/Page';\nimport AuthPage from './auth/Page';\nimport Cookies from 'js-cookie';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass App extends Component {\n    state = {};\n\n    constructor(props) {\n        super(props);\n\n        this.state.isAuthorized = this.getIsAuthorized();\n    }\n\n    getIsAuthorized() {\n        return !!Cookies.get('sid');\n    }\n\n    authChangeHandler = () => {\n        const isAuthorized = this.getIsAuthorized();\n        this.setState({ isAuthorized })\n    }\n\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Nav isAuthorized={this.state.isAuthorized} authChangeHandler={this.authChangeHandler} />\n\n                    <Route\n                        exact path=\"/\"\n                        render={(props) => <TasksPage {...props} isAuthorized={this.state.isAuthorized} />} />\n\n                    <Route\n                        path=\"/tasks/\"\n                        render={(props) => <TasksPage {...props} isAuthorized={this.state.isAuthorized} />} />\n\n                    <Route\n                        path=\"/auth/\"\n                        render={(props) => <AuthPage {...props} isAuthorized={this.state.isAuthorized} authChangeHandler={this.authChangeHandler} />} />\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}